DROP DATABASE IF EXISTS SMSDatabase;
CREATE DATABASE SMSDatabase CHARACTER SET 'utf8';


USE SMSDatabase;


CREATE TABLE User (
  id INT UNSIGNED NOT NULL AUTO_INCREMENT,
  name VARCHAR(25) NOT NULL,
  phoneNumber VARCHAR(15) NOT NULL,
  email VARCHAR(25) NOT NULL,
  country CHAR(2) DEFAULT "??",
  login VARCHAR(15) NOT NULL,
  password VARCHAR(15) NOT NULL,
  emailIsVerified BOOLEAN NOT NULL DEFAULT FALSE,
  phoneNumberIsVerified BOOLEAN NOT NULL DEFAULT FALSE,
  apiKey VARCHAR(60) DEFAULT '',
  apiLogin VARCHAR(25) DEFAULT '',
  proxySMSurl VARCHAR(25) DEFAULT '',
  created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  smsCredit INT DEFAULT 0,
  PRIMARY KEY (id, phoneNumber)
) Engine=INNODB;


CREATE TABLE SMS (
  id INT UNSIGNED NOT NULL AUTO_INCREMENT,
  sender INT UNSIGNED NOT NULL,
  content VARCHAR(250) DEFAULT "",
  sent_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  is_sent BOOLEAN DEFAULT FALSE,
  PRIMARY KEY (id),
  CONSTRAINT FK_UserSender FOREIGN KEY (sender) REFERENCES User(id)
) Engine=INNODB;

CREATE TABLE Contact (
  id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
  proprietor INT UNSIGNED NOT NULL,
  name VARCHAR(25) NOT NULL,
  surname VARCHAR(25) DEFAULT "",
  phoneNumber VARCHAR(15) NOT NULL,
  email VARCHAR(25) DEFAULT "",
  CONSTRAINT FK_UserProprietor FOREIGN KEY (proprietor) REFERENCES User(id)
) Engine=INNODB;

CREATE TABLE DGroup (
  id INT UNSIGNED NOT NULL AUTO_INCREMENT,
  proprietor INT UNSIGNED NOT NULL,
  name VARCHAR(25) NOT NULL,
  PRIMARY KEY (id)
) Engine=INNODB;

CREATE TABLE Membership (
  id INT UNSIGNED NOT NULL AUTO_INCREMENT ,
  dgroup INT UNSIGNED NOT NULL,
  contact INT UNSIGNED NOT NULL,
  PRIMARY KEY (id),
  CONSTRAINT FK_MembershipContact FOREIGN KEY (contact) REFERENCES Contact(id),
  CONSTRAINT FK_MembershipGroup FOREIGN KEY (dgroup) REFERENCES DGroup(id)

) Engine=INNODB;

CREATE TABLE Sendings (
  id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
  sms INT UNSIGNED NOT NULL,
  dgroup INT UNSIGNED,
  contact INT UNSIGNED,
  CONSTRAINT FK_SendingSMS FOREIGN KEY (sms) REFERENCES SMS(id),
  CONSTRAINT FK_SendingContact FOREIGN KEY (contact) REFERENCES Contact(id),
  CONSTRAINT FK_SendingGroup FOREIGN KEY (dgroup) REFERENCES DGroup(id)
) ENGINE=INNODB;

/* Cr√©ation de l'utilisateur node pour cette bd */
DROP User smsplatform;
CREATE USER smsplatform IDENTIFIED WITH mysql_native_password BY 'smsplatform';
GRANT ALL PRIVILEGES ON SMSDatabase.* TO smsplatform;
FLUSH PRIVILEGES;

